name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            target
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build (debug)
        run: cargo build --verbose --all-targets --all-features

      - name: Build (release)
        run: cargo build --release --verbose --all-targets --all-features

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: walkers-editor
          path: target/release/walkers-editor

  check:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            target
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Clippy (debug, native)
        run: cargo clippy --all-targets --all-features -- -W clippy::all -W clippy::pedantic -W clippy::nursery -W clippy::cargo

      - name: Install wasm target
        run: rustup target add wasm32-unknown-unknown

      - name: Clippy (debug, wasm)
        run: cargo clippy --target wasm32-unknown-unknown --all-targets --all-features
